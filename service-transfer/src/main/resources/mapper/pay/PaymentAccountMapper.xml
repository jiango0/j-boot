<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jzc.spring.boot.transfer.dao.pay.PaymentAccountMapper">
    <resultMap id="accountMap" type="com.jzc.spring.boot.transfer.domain.PaymentAccountEntity">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="open_id" property="open_id" jdbcType="VARCHAR" />
        <result column="order_id" property="order_id" jdbcType="VARCHAR" />
        <result column="payment_serial_no" property="payment_serial_no" jdbcType="VARCHAR" />
        <result column="partner_code" property="partner_code" jdbcType="VARCHAR" />
        <result column="shop_id" property="shop_id" jdbcType="VARCHAR" />
        <result column="third_serial_no" property="third_serial_no" jdbcType="VARCHAR" />
        <result column="pay_code" property="pay_code" jdbcType="VARCHAR" />
        <result column="pay_method" property="pay_method" jdbcType="VARCHAR" />
        <result column="pay_platform" property="pay_platform" jdbcType="VARCHAR" />
        <result column="createtime" property="createtime" javaType="java.util.Date" />
        <result column="updatetime" property="updatetime" javaType="java.util.Date" />
        <result column="pay_price" property="pay_price" javaType="java.math.BigDecimal" />
        <result column="free_amount" property="free_amount" javaType="java.math.BigDecimal" />
        <result column="amount_fee" property="amount_fee" javaType="java.math.BigDecimal" />
        <result column="rate_fee" property="rate_fee" javaType="java.math.BigDecimal" />
        <result column="pay_status" property="pay_status" javaType="java.math.BigDecimal" />
        <result column="pay_remark" property="pay_remark" jdbcType="VARCHAR" />
        <result column="notify_url" property="notify_url" jdbcType="VARCHAR" />
        <result column="pay_type" property="pay_type" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler"/>
        <result column="cancel_action" property="cancel_action" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler"/>
        <result column="odd_change" property="odd_change" jdbcType="DECIMAL" />
        <result column="merchant_id" property="merchant_id" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="base_coloumn">
        id,
        open_id,
        order_id,
        payment_serial_no,
        partner_code,
        shop_id,
        third_serial_no,
        pay_code,
        pay_platform,
        createtime,
        updatetime,
        pay_price,
        free_amount,
        amount_fee,
        rate_fee,
        pay_status,
        pay_remark,
        notify_url,
        pay_type,
        cancel_action,
        odd_change,
        merchant_id
    </sql>
    <select id="selectPaymentAccountById" parameterType="java.math.BigDecimal" resultMap="accountMap">
        SELECT
        <include refid="base_coloumn"/>
        FROM payment_account
        WHERE id = #{id}
    </select>
    <select id="selectPaymentAccountList" parameterType="map" resultMap="accountMap">
        SELECT
        <include refid="base_coloumn"/>
        FROM payment_account
        <where>
            <if test="order_id!=null">
                and order_id = #{order_id}
            </if>
            <if test="payment_serial_no!=null">
                and payment_serial_no = #{payment_serial_no}
            </if>
            <if test="partner_code!=null">
                and partner_code = #{partner_code}
            </if>
            <if test="shop_id!=null">
                and shop_id = #{shop_id}
            </if>
            <if test="third_serial_no!=null">
                and third_serial_no = #{third_serial_no}
            </if>
            <if test="pay_code!=null">
                and pay_code = #{pay_code}
            </if>
            <if test="pay_platform!=null">
                and pay_platform = #{pay_platform}
            </if>
            <if test="pay_status!=null">
                and pay_status = #{pay_status}
            </if>
            <if test="cancel_action!=null">
                and cancel_action = #{cancel_action}
            </if>
            <if test="pay_type!=null">
                and pay_type = #{pay_type}
            </if>
            <if test="pay_status_in != null">
                and pay_status in
                <foreach item="item" index="index" collection="pay_status_in" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="createtime_before != null"><![CDATA[
                and createtime < #{createtime_before}
            ]]></if>
            <if test="createtime_after != null"><![CDATA[
                and createtime >= #{createtime_after}
            ]]></if>
            <if test="merchant_id!=null">
                and merchant_id = #{merchant_id}
            </if>
        </where>
        <choose>
            <when test="disableOrderBy == true"></when>
            <otherwise>order by updatetime desc</otherwise>
        </choose>
        <if test="orderBy != null">
            order by ${orderBy}
        </if>
    </select>

    <select id="findPaymentWithStatusAndTime" resultMap="accountMap">
        SELECT
          <include refid="base_coloumn"/>
        FROM
          payment_account
        <where><![CDATA[
          pay_status = #{payStatus}
          AND createTime < #{endTime}
          AND pay_type = 0
        ]]></where>
    </select>

    <insert id="insertPaymentAccount" useGeneratedKeys="true" keyProperty="id" parameterType="com.jzc.spring.boot.transfer.domain.PaymentAccountEntity">
        INSERT INTO payment_account
        (
            open_id,
            order_id,
            payment_serial_no,
            partner_code,
            shop_id,
            third_serial_no,
            pay_code,
            pay_method,
            pay_platform,
            createtime,
            updatetime,
            pay_price,
            free_amount,
            amount_fee,
            rate_fee,
            pay_status,
            pay_remark,
            notify_url,
            pay_type,
            cancel_action,
            odd_change,
            merchant_id
        ) VALUES (
            #{open_id},
            #{order_id},
            #{payment_serial_no},
            #{partner_code},
            #{shop_id},
            #{third_serial_no},
            #{pay_code},
            #{pay_method},
            #{pay_platform},
            #{createtime},
            #{updatetime},
            #{pay_price},
            #{free_amount},
            #{amount_fee},
            #{rate_fee},
            #{pay_status},
            #{pay_remark},
            #{notify_url},
            #{pay_type, typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
            #{cancel_action, typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
            #{odd_change},
            #{merchant_id}
        )
    </insert>

    <update id="updatePaymentAccount" parameterType="com.jzc.spring.boot.transfer.domain.PaymentAccountEntity">
        UPDATE payment_account
        <set>
            <if test="open_id!=null">
                open_id = #{open_id},
            </if>
            <if test="order_id!=null">
                order_id = #{order_id},
            </if>
            <if test="payment_serial_no!=null">
                 payment_serial_no = #{payment_serial_no},
            </if>
            <if test="partner_code!=null">
                partner_code = #{partner_code},
            </if>
            <if test="shop_id!=null">
                shop_id = #{shop_id},
            </if>
            <if test="third_serial_no!=null">
                third_serial_no = #{third_serial_no},
            </if>
            <if test="pay_code!=null">
                pay_code = #{pay_code},
            </if>
            <if test="pay_method!=null">
                pay_method = #{pay_method},
            </if>
            <if test="pay_platform!=null">
                pay_platform = #{pay_platform},
            </if>
            <if test="pay_price!=null">
                pay_price = #{pay_price},
            </if>
            <if test="free_amount!=null">
                free_amount = #{free_amount},
            </if>
            <if test="amount_fee!=null">
                amount_fee = #{amount_fee},
            </if>
            <if test="rate_fee!=null">
                rate_fee = #{rate_fee},
            </if>
            <if test="pay_status!=null">
                pay_status = #{pay_status},
            </if>
            <if test="pay_remark!=null">
                pay_remark = #{pay_remark},
            </if>
            <if test="notify_url!=null">
                notify_url = #{notify_url},
            </if>
            <if test="pay_type != null">
                pay_type = #{pay_type, typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
            </if>
            <if test="cancel_action != null">
                cancel_action = #{cancel_action, typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
            </if>
            <if test="odd_change!=null">
                odd_change = #{odd_change},
            </if>
            <if test="merchant_id!=null">
                merchant_id = #{merchant_id},
            </if>
            <if test="finished_time!=null">
                finished_time = #{finished_time},
            </if>
            <if test="createtime != null">
                createtime = #{createtime},
            </if>
            <if test="tradetime != null">
                tradetime = #{tradetime},
            </if>
            updatetime = #{updatetime}
        </set>
        WHERE
        id = #{id}
    </update>

    <update id="updatePaymentAccountByorder">
         UPDATE payment_account
         <set>
             <if test="pay_status!=null">
                 pay_status = #{pay_status},
             </if>
         </set>
        WHERE order_id = #{order_id}
    </update>

    <update id="updatePaymentSerialNoByOrderId">
        UPDATE
          payment_account
        SET
          third_serial_no = #{third_serial_no}
        WHERE
          order_id = #{order_id}
    </update>

    <delete id="delete" parameterType="long">
      DELETE FROM
        payment_account
      WHERE
        id = #{id}
    </delete>

    <select id="selectDateList" parameterType="map" resultMap="accountMap">
        SELECT
        <include refid="base_coloumn"/>
        FROM payment_account
        WHERE
        <if test="id != null">
            <![CDATA[
              id < #{id} and
            ]]>
        </if>
        <![CDATA[
            createtime >= #{startDate} and createtime <= #{endDate} and shop_id = #{shopId}
        ]]>
        order by id desc
        limit ${count}
    </select>



</mapper>